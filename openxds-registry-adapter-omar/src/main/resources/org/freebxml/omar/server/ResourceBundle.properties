message.NoInfoAvailable=No additional information is available

message.NoAccessURIForService=No accessURI for service "{0}"

message.NoServiceBindingsForService=No ServiceBindings For Service "{0}"

message.InvocationFileButNoService=Invocation file but no service for object type "{0}"

message.NoManagerImplementedForObjectType=No manager implemented for object type "{0}"

message.SourceObjectNotFoundForExtrinsicObject=sourceObject of association with id "{0}" is not an ExtrinsicObject or could not be found

message.InvocationControlFileIsNull=InvocationControlFile is null

message.InvocationControlFileIsNotPresentAsAnExtrinsicObject=InvocationControlFile is not present as an ExtrinsicObject

message.SourceObjectNotFoundForService=sourceObject of association with id "{0}" is not a Service or could not be found

message.WrongResponseReceivedFromCatalogingService=Wrong response received from cataloging service.  Expected CatalogingContentResponse, got\: 

message.CatalogingServiceInstanceShouldReturnRequestContext=Cataloging service instance should return RequestContext.  Returned\: 

message.WrongResponseReceivedFromValidationService=Wrong response received from validation service.  Expected ValidationContentResponse, got\: 

#org.freebxml.omar.server.common.RequestContext
message.auditableEventsNotAllowed=AuditableEvents are not allowed to be submitted by clients
message.unresolvedReferences=Unresolved references\: {0} in RegistryObject with id\: {1}

#org.freebxml.omar.server.common.Utility
message.unknownRegistryObjectType=Internal Error happens, unknown RegistryObjectType

#org.freebxml.omar.server.event.AbstractNotifier
message.onlyNotifyActionsSupported=Only NotifyActions supported.

message.emailNotificationWOmailto=Attempted email notification to endpoint that does not use 'mailto:' scheme: {0}
message.registryNotification=[Registry Notification] id: {0}
message.rawEmailNotification=Could not get XSLT style sheet for Email Notification. Sending raw XML Notification.
message.id=id={0}
message.idName=id={0} name={1}
message.prettyPrintNotificationFailure=Failed to pretty print notification
message.user=user: {0}
message.userUnknown=user: unknown
message.xsltError=XSLT ERROR
message.xsltFatalError=XSLT FATAL ERROR
message.xsltWarning=XSLT WARNING

message.onlySQLQuerySupported=Only SQLQuery supported at this time.
#org.freebxml.omar.server.interfaces.Request
message.unknownRequest=InvalidRequest: Unknown request {0}
#org.freebxml.omar.server.interfaces.common.SOAPServlet
message.SOAPPOSTFailed=SOAP POST failed 

message.unableToCreateMessageFactory=Unable to create message factory
#org.freebxml.omar.server.interfaces.rest.FilePathURLHandler
message.expectExtrinsicObject=URL matched a {0}. Was expecting an ExtrinsicObject. Maybe you want to specify getRepositoryItem\=false?
message.URLContextPath=The URL context path {0} does not have any path elements.
message.expectedRegistryPackage=Expected RegistryPackage but found {0} pathInfo\: {1}
message.registryObjectNotFound=No RegistryObject found with URL "{0}"


#org.freebxml.omar.server.interfaces.rest.QueryManagerURLHandler
message.methodCannotBeNull=method cannot be null or empty. The correct value for the method param must be specified.
message.expectedExtrinsicObjectNotFound=Expected ExtrinsicObject, instead found {0}
message.unknownMethod=Unknown method\: {0}


#org.freebxml.omar.server.interfaces.rest.URLHandler
message.unimplementedGETMethod=Unimplemented: GET method.
message.unimplementedPOSTMethod=Unimplemented: POST method.
message.nullTransformResponseParammeter=null reference passed to this method. StringWriter sWriter: {0} Writer out: {1}
message.repositoryItem=Repository Item

#org.freebxml.omar.server.interfaces.rest.UserDefinedURLHandler
message.noRepositoryItemFound=No Repository Item found with URL: {0}
message.duplicateRegistryObjects=Duplicate RegistryObjects found with URL value: {0}
message.noRegistryObjectFound=No RegistryObject found with URL {0}


#org.freebxml.omar.server.interfaces.soap.RegistrySOAPServlet
message.registrySOAPServletInitFailed=RegistrySOAPServlet Init Failed: {0}
message.invalidRequest=InvalidRequest: Cannot have more than one child element
message.noebXMLRegistryRequest=The SOAP message does not contain an ebXML Registry Request.
#org.freebxml.omar.server.lcm.LifeCycleManagerImpl
message.specifiedUserNotOwner=Specified effective User id {0} not found for owner reassignment.
message.requestSlotInvalid=Error request slot {0} is invalid because caller is not a RegistryAdministrator role.
message.undefinedDeletionScope=Undefined deletionScope
#org.freebxml.omar.server.lcm.relocation.RelocationProcessor
message.ownerReassignmentFailed=Owner reassignment failed because requestor is not a RegistryAdministrator. Requesting User id = {0}
#org.freebxml.omar.server.lcm.replication.ReplicationManager
message.cannotCreateReplica=Cannot create replica with an ObjectRef with null home
message.error.ErrorGettingRemoteObject=Exception while getting an object with id "{1}" from a remote registry with home "{0}"
message.error.RemoteObjectNotFound=Remote object with id "{1}" not found in a remote registry with home "{0}"

message.HTTPError=HTTP Error: {0}
#org.freebxml.omar.server.lcm.versioning.VersionProcessor
message.idDoesNotMatch=The lid  "{0}" does not match existing lid "{1}" on object with id "{2}".

#org.freebxml.omar.server.persistence.rdb
#AbstractDAO
message.getSQLStatementFragmentMissing=getSQLStatementFragment missing in {0}
message.error.columnInfoUnspecified=columnInfo parameter cannot be null or empty.
message.error.message.error.spillOverIdTooLong=The id "{0}" is too long. Please replace it with an id that is a shorter length

#AdhocQueryDAO
message.noSupportForQueryLanguage=No support for Query Language: {0} in persistent queries.
message.SQLQueryExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.SQLQuery.

#AffectedObjectDAO
message.cannotUpdateComposedObject=Cannot update a composed object.
message.ObjectRefTypeExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.ObjectRefType.

#AssociationDAO
message.AssociationExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.Association.

#AuditableEventDAO
message.AuditableEventExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.AuditableEvent.

#ClassificationDAO
message.ClassificationExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.Classification.

#ClassificationNodeDAO
message.couldNotFindParent=Could not find parent with id: {0} in request or registry for ClassificationNode with id: {1} and code: {2}
message.ClassificationNodeNotMatch=Parent of ClassificationNode with id:{0} and code: {1} cannot be of type: {2}
message.ClassificationNodeExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.ClassificationNode.


#ClassificationSchemeDAO
message.ClassficationSchemeExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.ClassificationScheme.

#ConnectionPool
message.noConnectionAvailable=Cannot get an available connection from Pool: freeConnection={0} initial Connection pool size ={1}
message.invalidSizeOfConnectionPool=Invalid initial or maximum size of connection pool
message.databaseConnectionTimedOut=Database connection timed-out

#EmailAddressDAO
message.EmailAddressTypeExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.EmailAddressType.

#ExternalIdentifierDAO
message.ExternalIdentifierTypeExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.ExternalIdentifierType.
#ExternalLinkDAO
message.ExternalLinkTypeExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.ExternalLinkType.
#ExtrinsicObjectDAO
message.ExtrinsicObjectExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.ExtrinsicObject.
#FederationDAO
message.FederationExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.Federation.
#IdentifiableDAO
message.IdentifiableTypeExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.IdentifiableType.

#InternationalStringDAO
message.unimplementedMethod=Unimplemented method
#NotifyActionDAO
message.NotifyActionTypeExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.NotifyActionType.
#ObjectRefDAO
#AffectedObjectDAO->message.ObjectRefTypeExpected

#OrganizationDAO
message.OrganizationExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.Organization.
#PersonDAO
message.PersonExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.Person.
#PostalAddressDAO
message.incorrectRegistryObject=Incorrect RegistryObject
message.PostalAddressTypeExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.PostalAddressType.
#RegistryDAO
message.RegistryTypeExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.RegistryType.
#RegistryObjectDAO
message.RegistryobjectTypeExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.RegistryObjectType.
message.unknownObjectType=Unknown objectType: "{0}"

#RegistryPackageDAO
message.RegistryPackageExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.RegistryPackage.
#SQLPersistenceManagerImpl
message.connectToDatabaseFailed=Error: Could not create Connection to database. Check if database is already running in another program (e.g. registry servlet in tomcat)
message.invalidReturnType=Invalid returnType: {0}
#ServiceBindingDAO
message.serviceBindingHasNoParentService=ServiceBinding with id={0} has no parent Service
message.ServiceBindingExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.ServiceBinding.

#ServiceDAO
message.ServiceExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.Service.
#SlotDAO
message.methodNotSupported=Interanal code error: Method not supported.
#InternationalStringDAO->message.unimplementedMethod


#SpecificationLinkDAO
message.specificationLinkHasNoParentServiceBinding=SpecificationLink with id={0} has no parent ServiceBinding
message.specificationLinkHasNoPreentSpecificationLink=SpecificationLink with id={0} has no parent SpecificationLink
message.SpecificationLinkExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.SpecificationLink.

#SubscriptionDAO
message.SubscriptionTypeExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.SubscriptionType.

#TelephoneNumberDAO
#PostalAddressDAO->message.incorrectRegistryObject
message.TelephoneNumberTypeExpected=Unexpected object {0}. Was expecting org.oasis.ebxml.registry.bindings.rim.TelephoneNumberType.
#UsageParameterDAO
message.javaLangStringExpected=Unexpected object {0}. Was expecting java.lang.String.
#org.freebxml.omar.server.query.federation.FederatedQueryManager
message.noFederationConfigured=No Federation configured with id: {0}
message.error.localQuery=Error during dispatch of federated query to local registry: Registry: id={0} name={1}
message.error.remoteQuery=Error during dispatch of federated query to remote registry: Registry: id={0} name={1}

#org.freebxml.omar.server.query.filter.FilterQueryProcessor
message.foreignKeyColumnNotSet=Internal error. Parent processor did not set foreignKeyColumn on child processor
#org.freebxml.omar.server.query.filter.RRFilterQueryProcessor
message.branchQuery=BranchQuery MUST not be used as a top level filter query.
#org.freebxml.omar.server.query.filter.SimpleFilterProcessor
message.unsuportedComparatorAttribute=Unsuported comparator attribute value in SimpleFilter of FilterQUery.

#org.freebxml.omar.server.query.sql.SQLParser
message.missingReturnStatement=Missing return statement in function
message.invalidStoredProcedureName=Invalid stored procedure name {0}
message.invalidCollectionAttribute=Invalid Query: Collection attribute {0} is only valid in an IN clause
#org.freebxml.omar.server.query.sql.SQLParserTokenManager
message.staticCharStreamClass=ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.
message.ignoringInvalidLexicalState=Error: Ignoring invalid lexical state : {0}. State unchanged.

#org.freebxml.omar.server.query.QueryManagerImpl
message.unknownType=unknown type
message.remoteObjectNotImplemented=Remote object gets not implemented yet

#org.freebxml.omar.server.repository.filesystem.FileSystemRepositoryManager
message.unimplemented=Unimplemented
#org.freebxml.omar.server.repository.hibernate.HibernateRepositoryManager
message.seeLogsForDetails={0} See logs for details.
message.RepositoryItemDoesNotExist=RepositoryItem does not exist: lid=" {0} " versionName={1}

#org.freebxml.omar.server.repository.hibernate.RepositoryHibernateUtil
message.buildingSessionFactory=Exception building SessionFactory: {0}
#org.freebxml.omar.server.repository.AbstractRepositoryManager
message.getAsStreamSource='getAsStreamSource(String)' is unimplemented.

message.RegistrySAMLServletInitFailed=RegistrySAMLServlet Init Failed:{0}
message.parameterTarget=Expected parameter TARGET not found.
message.parameterSAMLArtifact=Expected parameter SAMLArtifact not found.
message.typeMismatch=Error. Expected: AssertionType, found: {0}
message.trustAnchorsKeystore=Cannot load the trust anchors keystore
message.privateKey=Error getting private key
message.gettingCertificate=Error getting certificate
message.gettingCertificateChain=Error getting certificate chain
message.certificateNotFound=Certificate not found for alias "{0}"
message.registryOperator=Required user not found: Registry Operator, id: {0}
message.registryGuest=Required user not found: Registry Guest, id: {0}
message.userRegistrationFailed=User registration fails. The user with id {0} already exists. If the certificate is recently updatd, replacement of the old certificate in last registration is not allowed.
message.nilUserReference=The user reference passed to this method is null
message.error.certificateAlreadyExists=User registration failed. Reason: The user with id {0} cannot be registered because the certificate used by the request is already assocaited with a regisitered user whose alias is {1}.

message.invalidRequest=InvalidRequest: Unknown request {0}

message.ownersNotFound=Owners not found for object {0} of type {1}

message.defaultAccessControlPolicy=Could not load default Access Control Policy for Registry
message.unknownRootDocumentType=unknown root document type: {0}

message.unknownTypeFound=Unknown type found in the input file


#server.cms
message.ValidationContentResponseExpected=Wrong response received from validation service.  Expected ValidationContentResponse, got: {0}
message.ResponseStatusTypeExpected=Wrong status received from validation service.  Expected ResponseStatusType for 'Success' or 'Failure', got: {0}
message.objectNotServiceInvocationInfo=Object is not a ServiceInvocationInfo: {0}

#server.security.authentication.CertificateAuthority
message.KSRepItemNotFound=signCertificateRequest: Expected KeyStore as repositoryItem but found none
message.CertGenError=Error while generating registry issued certificate.
message.ErrorSigningRegIssuedCert=Error while signing Registry issued Certificate

#server.security.authentication.UserRegistrar
message.isAuthorized=User {0} {1} is authorized to self-register
message.isNotAuthorized=User {0} {1} is not authorized to self-register. Please contact registry support.
message.registeringNewUser=Registering new user with id\: {0}
message.userRegistered=User {0} registered
message.userRegistrationFailedOneUser=User registration fails. The SubmitObjectsRequest must have exactly one User object
message.userRegistrationFailedUUID=User registration fails. The User must have a valid UUID

message.RegisteredConstructorForServiceTypeOrInstanceForType=Registered Constructor for service type or instance {0} for type {1}.

message.ProcessingAttachmentWithContentId=Processing attachment with contentId: {0}

message.NoAccessibleConstructorInvokingGetInstanceInstead=No accessible constructor. invoking getInstance() instead.
message.AbstractFactoryCannotInstantiatePlugin=[AbstractFactory] Cannot instantiate plugin. Please check that property {0} is correctly set in omar.properties file.

message.LoadingOmarProperties=Loading omar properties...

message.CouldNotGetSlotsFromTheRequest=Could not get slots from the request

message.ConstructorFailed=Constructor failed.
message.ExceptionCaughtOnEvent=Exception caught on onEvent()

message.NoAccessibleConstructorInvokingGetInstanceInstead=No accessible constructor. invoking getInstance() instead.
message.EventManagerCannotInstantiateEventManagerPlugin=[EventManager] Cannot instantiate EventManager plugin. Please check that property {0} is correctly set in omar.properties file.

message.userReferenceIsNullDefaultingToRegistryGuest=user reference is null. Defaulting to RegistryGuest

message.FailedToInitExtendedRESTInterfaces=Failed to init extended REST interfaces.
message.AddedRESTExtensionInterface=Added REST extension: Interface: {0} Class: {1}
message.FailedToCreateExtendedURLHandlerForMessage=Failed to create extended URLHandler for {0}. Exception: {1}. Message: {2}

message.ProblemInitializingTransformerFactory=Problem initializing TransformerFactory. Transformations to non-xml REST flavors not supported. Details on problem: {0}
message.ProblemTransformingResponseToNonXml=Problem transforming response to non-xml flavor. Return xml instead. Details on problem: {0}
message.BaseURL=Base URL: {0}
message.FoundRegistryObjectWithId=Found RegistryObject with id  {0}

message.init=init
message.RegistrySOAPServletInitFailed=RegistrySOAPServlet Init Failed:
message.CaughtException=Caught exception: {0}
message.CausedBy=Caused by: {0}
message.FailedToLogResponseMessage=Failed to log response message: {0}
message.ProcessingAttachmentWithContentId=Processing attachment with contentId: {0}

message.CallingPminsertAt=Calling pm.insert at: {0}
message.DoneCallingPminsertAt=Done Calling pm.insert at: {0}
message.CallingInvokeServicesAt=Calling invokeServices at: {0}
message.DoneCallingInvokeServicesAt=Done Calling invokeServices at: {0}
message.ObjectsFound=Objects found: {0}
message.IgnoringVersionInfromationAfterMajorMinorVersion=Ignoring version infromation after major/minor version identifiers: {0}

message.CaughtException1=Caught exception
message.DeletingRowsInTable=Deleting {0} rows in table {1}
message.InsertingRowsInTable=Inserting {0} rows in table {1}
message.UpdatingRowsInTable=Updating {0} rows in table {1}

message.DatabaseConnectionPoolingEnabled=Database connection pooling enabled

message.InsertingEmailAddresss=Inserting {0} EmailAddress(es)
message.UpdatingEmailAddresss=Updating {0} EmailAddress(es)

message.InsertingPostalAddresss=Inserting {0} PostalAddresss
message.UpdatingPostalAddresss=Updating {0} PostalAddresss

message.stmtEquals=stmt : {0}
message.WarningExcessiveResultSetSizeQUery=Warning: Excessive result set size. Query should be examined. cnt: {0}

message.UnableToCreateTestConnectionForDataSource=Unable to create test connection for dataSource {0}
message.UnableToGetInitialContext=Unable to get InitialContext
message.UnableToGetJNDIContextForDataSource=Unable to get JNDI context for dataSource {0}
message.dbURLEquals=dbURL: {0}
message.FailedToCreateConnectionPool=Failed to create connection pool: {0} : {1}
message.ErrorUnableToOpenDbConnctionForDataSource==Error: Unable to open db connction for dataSource {0}

message.SubscriptionDAOId=SubscriptionDAO id : {0}

message.InsertingTelephoneNumbersSize=Inserting {0} Telephone Number(s)

message.executingQuery=executing query: {0} )

message.CannotInstantiateRepositoryManagerPlugin=[RepositoryManagerFactory] Cannot instantiate RepositoryManager plugin. Please check that property {0} is correctly set in omar.properties file.
message.NoAccessibleConstructor=No accessible constructor. invoking getInstance() instead.

message.RepositoryItemWithIdAlreadyExists=Repository item with id {0} already exists.
message.PayloadSignatureAlreadyExists=Payload signature for repository item with id {0} already exists.
message.RepositoryItemDoesNotExist=Repository item with id {0} does not exist!
message.CannotDeletePayloadSignature=Cannot delete Payload signature file for Repository item with id {0}
message.deletedNOK=Delete operation failed.

message.RepositoryItemWithIdAndVersionAlreadyExist=Repository item with lid: {0} and versionName: {1} already exists.
message.RepositoryItemWithIdAndVersionDoesNotExist=Repository item with lid: {0} and versionName: {1} does not exist.
message.FailedToInsertRepositoryItem=Failed to insert RepositoryItem {0}.
message.FailedToGetRepositoryItem=Failed to get RepositoryItem lid: {0} versionName: {1}
message.FailedToDeleteRepositoryItem=Failed to delete RepositoryItem lid: {0} versionName: {1}
message.FailedToUpdateRepositoryItem=Failed to delete RepositoryItem lid: {0} versionName: {1}
message.FailedToSearchRepositoryItem=Failed to search for RepositoryItem with lid: {0} versionName: {1}. 
message.FailedToDeleteRepositoryItems=Failed to delete RepositoryItems.
message.FailedToVerifyRepositoryItemExistence=Failed to verify RepositoryItem existence.
message.FailedToGetSizeForRepositoryItem=Failed to get size for RepositoryItem with lid\: {0} versionName\:{1}.
message.FailedCloseDatabaseSession=Failed to close database session.
message.failedToRollbackTransaction=Failed to roll back database transaction.

message.UnableToCreateTestConnectionForDataSource=Unable to create test connection for dataSource {0}
message.UnableToGetInitialContext=Unable to get InitialContext
message.UnableToGetJNDIContextForDataSource=Unable to get JNDI context for dataSource {0}
message.DatabaseCreated=Database created
message.FailedToCreateDatabase=Database creation failed
message.RebuildingDBSchema=--- Rebuilding DB schema ---
message.RegistrySAMLServletInitFailed1=RegistrySAML Servlet Init Failed:

message.InternalErrorCouldNotLoadPredefinedUsers=Internal error. Could not load predefined users.
message.getRegistryAdministratorsAddingAdmin=getRegistryAdministrators: adding admin {0}
message.RegistryHasNotDefinedRegistryAdministratorsYet=Registry has not defined RegistryAdministrators yet. This can be done by setting the ebxmlrr.security.authorization.registryAdministrators property in ebxmlrr.properties file.

message.FailedToLoadCustomAttributeFinderModuleException=Failed to load custom attribute finder module {0} for XACML engine. Exception: {1}
message.FailedToLoadCustomPolicyFinderModuleException=Failed to load custom policy finder module {0} for XACML engine. Exception: {1}
message.FailedToLoadCustomFunctionException=Failed to load custom function {0} for XACML engine. Exception: {1}

#Authorization errors
message.UnauthorizedRequestDenied=Request denied. User with id {1} is not authorized to {2} on this object: {0}. More details: {3}. In most cases, it is because the user is not the owner of the object.
message.error.authorization.allowedOnlyToAdmin.defineDefaultACP=Unauthorized request Denied. Reason: Only RegistryAdministrators can define default Access Control Policy file. object: {0} user: {1} action: {2}
message.error.authorization.allowedOnlyToOwnerOrAdmin.assignACP=Unauthorized request Denied. Reason: Only owner or RegistryAdministrator can assign an Access Control Policy to an object. object: {0} user: {1}
message.error.authorization.allowedOnlyToAdmin.defineFederation=Unauthorized request Denied. Reason: Only RegistryAdministrator can define Federation, Registry or HasFederationMember configuration. object: {0} user: {1} action: {2}
message.error.authorization.ObjectNotFound=Cannot perform authorization. Reason: object not found in registry object: {0} user: {1} action: {2}
message.error.authorization.referenceToDeprecatedObjectDenied=Unauthorized request Denied. Reason: Unauthorized reference. Check if target of reference is not deprecated. object: {0} user: {1} action: {2}
message.error.authorization.AccessControlPolicyForAlreadyExists=Invalid Request. Reason: AccessControlPolicyFor Association already exists. Please remove existing AccessControlPolicyFor Association before adding new one. object: {0} user: {1} 
message.error.authorization.unauthenticatedUser=Unauthorized request Denied. Reason:An unauthenticated user is not allowed to submit/update objects. object: {0}


message.MoreThan1AccessControlPolicyFoundContainingComposedPolicy=More than 1 Access Control Policy found containing composed policy with id {0}
message.FailedToLoadPolicy=Failed to load policy
message.MoreThan1AccessControlPolicyWithId=More than 1 Access Control Policy found for RegistryObject with id  {0}
message.INDETERMINATEPolicyMatchForObjectId=INDETERMINATE policy match for object id {0} and policy id {1} status {2}
message.CouldNotLoadDefaultAccessControlPolicyForRegistry=Could not load default Access Control Policy for Registry
message.findPolicyFailedToFindPolicyWithId=findPolicy: Failed to find policy with id {0}
message.urlForSOAP=This URL for SOAP access to the registry. It is not for web access to the registry
message.urlForWebAccess=To use the Web UI for the registry, specify the following URL\: {0}


message.errorValidatingXML=Error in validating xml content\: {0}

message.errorBindingMustBeSoap=Error\: Binding must be SOAP. Check the value of the binding element in your WSDL file.

message.errorBindingStyleMustBeDocument=Error\: binding style must be set to 'document'. Check the style attribute of the soap\:binding element in your WSDL file.

message.errorTransportMustBeHttp=Error\: transport must be 'http'. Check the transport attribute and verify that it is set to 'http\://schemas.xmlsoap.org/soap/http'

message.missingMessage=Cannot find message with this key\: {0}

message.couldNotDeleteCredentials=Could not delete credentials from server keystore for this alias {0}

message.serverCacheInitialized=Server cache initialized

message.nodeCodeIsNull=The ClassificationNode with id\: {0} has no value specified for its code attribute.

message.extension.load.failure=Unable to load Constructor for service type or instance {0} for type {1}.

message.xacmlExtFunctionParamMissing=Missing required argument ''{1}'' ({0}).
message.xacmlExtFunctionEvalError=Error while evaluating extended XACML function ''{0}''.

message.notTheExpectedTypeOfNode=Invalid value for attribute ''{0}''. Expected the id of a ClassificationNode within the ''{1}'' ClassificationScheme. Found value of ''{2}''. The objectType attribute of a RegistryObject MUST reference a ClassificationNode in the ObjectType Classification Scheme. Please choose a different ClassificationNode for objectType.

# ws profile support
message.error.missingFile=The following file could not be found: {0}. Verify that all files were sent in the request.

message.ExtrinsicObjectOrExternalLinkExpected=Unexpected object {0}. Was expecting ExtrinsicObject or ExternalLink

message.error.unsupportedFileType=Unsupported file Type for file with name\: {0}

message.error.invalidURL=The following URL is invalid\: {0}

message.error.registryObjectIdIsNull=RegistryObject Id is null

message.error.errorPossibleCauses=An error has occurred. Here are some possible reasons: 

message.error.errorPossibleCauses=An error has occurred. Here are some possible reasons: {0} {1}

message.error.couldNotResolveURI=Could not resolve this URI: {0}

message.noRepositoryItemIncluded=Received an ExtrinsicObject, with id {0}, that does not contain a repository item.

message.referencesExist=References exist. The following is the map where the key is a RegistryObject and the value is a List of RegistryObjects that reference it:

message.missingRequiredAttribute=The following required attribute is missing from the file: {0}

message.missingRequiredElement=The following required element is missing from file {0}: {1}

message.nullNamespace=Namespace is null for following local name: {0}

message.unknownNamespacePrefix=The following namespace prefix is not defined: {0}

message.incorrectRootElement=Error: the document does not have the following root element: {0}

invalidQueryFilterParamter=Invalid query filter object type.  Expected java.util.Collection for $queryFilterIds parameter. Received {0} instead.
