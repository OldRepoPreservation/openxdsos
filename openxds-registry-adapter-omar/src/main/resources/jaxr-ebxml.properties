# Default properties file for JAXR ebXML provider.  This file should appear
# as a resource on the classpath were it gets loaded by the JAXR ebXML
# provider to initialize a default configuration which can be overrided by
# a user properties file and command line properties.
#
# $Header: /cvsroot/ebxmlrr/omar/conf/jaxr-ebxml.properties,v 1.56 2007/04/19 16:46:48 psterk Exp $

# System properties used by code
# On windows 2000 it is: C:/Documents and Settings/<user> (must use forward slashes)
# On unix it is something like: /home/<user>
# May be used as variable in property values when pre-fixed by $ (e.g. $user.home )
# Referred hereafter as <user.home>
#
# user.home

#
# The base directory for JAXR ebXML provider run time files
# Default is <omar.home>/jaxr-ebxml (see omar-common.properties)
# Best to leave it unspecified and go with defaults.
# May be used as variable in property values when pre-fixed by $ (e.g. $jaxr-ebxml.home )
#
# jaxr-ebxml.home=$omar.home/jaxr-ebxml

#
# SecurityUtil related default properties
# NOTE: keystore location relative to #jaxr-ebxml.home (hardcoded)
#
jaxr-ebxml.security.providerappname=jaxr-ebxml-provider-3.1
jaxr-ebxml.security.storetype=JKS
jaxr-ebxml.security.keystore=security/keystore.jks
jaxr-ebxml.security.storepass=ebxmlrr

#
# A customizable default user's alias and password
# The default values below match the test user created by 
# following ant targets: 
# 	ant createTestUser: to create keys and load TestUser.
#	ant loadTestUser: if keys for TestUser already exist in client keystore.
# 
# Note that server MUST be running as localCall=false is forced for loadTestUser
#
jaxr-ebxml.security.test.alias=testuser
jaxr-ebxml.security.test.keypass=testuserpasswd
jaxr-ebxml.security.storepass=ebxmlrr

#
# Determine whether the JAXR provider should use localCall
# or use SOAP to talk to ebXML Registry server.
#
org.freebxml.omar.client.xml.registry.localCall=false

#
# Default URL where the JAXR provider will find the SOAP interace to the
# ebXML Registry server.  Used when localCall=false, the default, to talk
# to the server.
#
# jaxr-ebxml.soap.url=http://localhost:8080/omar/registry/soap

#
# For use at least within some JUnit client tests, default HTTP URL at
# which the REST interface is deployed.
#
# jaxr-ebxml.http.url=http://localhost:8080/omar/registry/http

# This property specifies the login name guest users will be assigned when
# they access a secure ebxmlrr web client and choose the "Guest" option.
# Users who login with this user name will not sign requests sent to the 
# registry. By default, this associates their requests with the Registry Guest
# user on the server. The value specified should match the value of the 
# guestPrincipalName property in the build.properties file when the war file
# was built.
jaxr-ebxml.security.guestPrincipalName=RegistryGuest

#
# Concrete AdminShell Class
#
omar.client.admin.AdminShellFactory.adminShellClass=org.freebxml.omar.client.admin.SimpleAdminShell

# List of locales for which thin client interface translations are available. Pipe -separated.
omar.client.thinbrowser.supportedlocales=en_US|fi|fr_CA|pt_BR

# Default locale to be shown whn thin client starts.
omar.client.thinbrowser.defaultlocale=en_US

# This property is used to configure the thick client's JAAS callback
# handler class. This class will display either a GUI dialog,
# command-line prompt or other option for a user to enter their
# security credentials
#jaxr-ebxml.security.jaas.callbackHandlerClassName=

#
# This property is used to set the initial Adhoc Query panel displayed in the Thin Client
# Set this property to the UUID of the query panel.
# If it is not set, it defaults to the Business Query UUID: urn:freebxml:registry:query:BusinessQuery
# If this Business Query is not available, it defaults to the first query retrieved from the
# ADHOCQUERY table
#jaxr-ebxml.thin.defaultQueryPanel=

#
# Class-level JAXR Extensions
# Use these properties to define extensions to JAXR classes. Currently supported extension
# types are Association and ExtrinsicObject. Escape ':' to '\:' for property names.
# Optionally, define after the class name a comma-separated list of nicknames that identify
# the extension (to be used by lcm.createObject(String))
# Examples
# jaxr-ebxml.extensionclass.association.<MyAssociationTypeConceptID>=<MY_ASSOCIATION_CLASSNAME>
# jaxr-ebxml.extensionclass.extrinsicobject.<MyObjectTypeConceptID>=<MY_EXTRINSIC_OBJECT_CLASSNAME>,NICK1,NICK2
# ** Do not remove the lines below. They can be used by build scripts to add extensions.
# jaxr-ebxml.extensionclass.association.
# jaxr-ebxml.extensionclass.extrinsicobject.

# Example extension for type CPP, from demo DB

jaxr-ebxml.extensionclass.extrinsicobject.urn\:freebxml\:registry\:sample\:profile\:cpp\:objectType\:cppa\:CPP=org.freebxml.omar.client.xml.registry.example.CPP,CPP
#
# Extended Details support for RegistryBrowser (Web)
# Comma separated list of objectType/associationType IDs for which there are extended details
# pages in ext/ directory. The pages must be named after the type ID, replacing all chars not
# in (a-z, A-Z, 0-9, -) with '_'.
# Example: the CPP type, from Demo DB: urn:freebxml:registry:sample:profile:cpp:objectType:cppa:CPP
# File name: urn_freebxml_registry_sample_profile_cpp_objectType_cppa_CPP.jsp
jaxr-ebxml.thinbrowser.jsp-extensions=urn:freebxml:registry:sample:profile:cpp:objectType:cppa:CPP

#
# This property is used to control whether or not the JAXR Provider will request an authenticated session
# from the Registry server. Default is 'true'
#
jaxr-ebxml.security.createSecureSession=true

#
#Configuration for display no of results per page. Range for no of result per page should be in between 
# 1 to 50
#
omar.client.thinbrowser.numSearchResults=25


#
# The property is used to set the Title in the Thin Client's banner.
# The value is the Title's property name in the Thin Client's Resource Bundle.
# It is not the actual title. So, you will have to add a new property to the Thin Client's Resource
# Bundle for your title. See the Thin Client Configuration Guide for details. For example:
# omar.client.thinbrowser.title=myTitle
# Thin Client will look a localized property in the
# omar/src/resources/org/freebxml/omar/client/ui/thin/ResourceBundle.properties files called myTitle.
# For example:
# myTitle=Company ABC's Service Registry, <other locale>, <other locale>
# The default value of this property is applicationTitle which has a default value of 'ebXML Registry Repository'
#
#omar.client.thinbrowser.title=myTitle

#
# This property is used to set an optional company copyright. This is used if a company has customized the Web UI
# in some way or provided a value add feature that the company wants to protect
# The property value is the company copyright property name in the Web UI's Resource Bundle.
#
#omar.client.thinbrowser.companyCopyright=

#
# Anonymous user's  password
# 
jaxr-ebxml.security.keypass=testuserpasswd



#
# The property is used to set the Cascading Style Sheet (CSS) used by the Thin Client.
# The path to the file is relative to the web app context path. For example:
# omar.client.thinbrowser.cssFile=myApp.css
# Thin Client will look for file at <web app dir>/omar/myApp.css
#
omar.client.thinbrowser.cssFile=ebxml.css

#
# The property is used to set the logo image file used by the Thin Client.
# The path to the file is relative to the web app context path. For example:
# omar.client.thinbrowser.cssFile=images/myLogo.gif
# Thin Client will look for file at <web app dir>/omar/images/myLogo.gif
#
omar.client.thinbrowser.logoFile=images/freebxmlLogo.jpg

#
# This property is used to control the depth of the reference resolution
# during compress content filter queries
# Default is '0'. 
# '0': Compress only the requested objects.
# '1': Compress to one level
# '2': Comprees to two levels
# 'n': Compress to n levels
# '-1': Compress to all levels
#omar.client.thinbrowser.compressContent.maxDepthLevel=6
#omar.client.thinbrowser.compressContent.defaultDepthLevel=-1

#
# The property is used to set the wrapping of tabbed tables in thin client.
# The default wrap if not set is 4.
#
#omar.client.thinbrowser.wrapDetailTabAfter=4

#
# The property used to configure integration with web browser when
# selecting Show RegistryObject or Show RepositoryItem in Search Results
# Panel of RegistryBrowser.  It should be used only if the
# platform-specific defaults desribed below are incorrect or insufficient
# (perhaps, because the default commands are not in the PATH env var).
#
# On Windows, the default is 'rundll32 url.dll,FileProtocolHandler $url'
# Elsewhere, the default is 'firefox -remote openURL($url)'
#
# RegistryBrowser will fall back to using 'firefox $url' whenever executing
# default command (as above or from property setting here) fails on a
# non-Windows platform.  Note: The default command succeeds only when
# Firefox is already running.  Options below do not change the fall back
# command which may confuse users.
#
# For Mozilla use: mozilla -remote openURL($url)
# For Netscape use: netscape -remote openURL($url)
# For more information, see http://www.mozilla.org/unix/remote.html
#
# If running above in Windows environment, don't use parenthesis around URL.
# For IE use: explorer $url
# For default Windows browser: rundll32 url.dll,FileProtocolHandler $url
#
# You may need to qualify the path to the program (e.g. /usr/bin/firefox)
# if not already in your PATH env var.
#
# for example:
#jaxr-ebxml.registryBrowser.webBrowser.launch=firefox -remote openURL($url)

#
# These properties are used to configure the Web UI's documentation links
# Optionally, the doc links in the sidebar can be hidden. 
# To hide a link, set the property to 'doNotDisplay'.
#
#omar.client.thinbrowser.doc.documentation=
#omar.client.thinbrowser.doc.userGuide=
#omar.client.thinbrowser.doc.faq=
#omar.client.thinbrowser.doc.aboutRegistry=
#omar.client.thinbrowser.doc.aboutEbxml=
#omar.client.thinbrowser.doc.searchHelp=
#omar.client.thinbrowser.doc.exploreHelp=
#omar.client.thinbrowser.doc.userRegistrationHelp=
#omar.client.thinbrowser.doc.publishHelp=
#omar.client.thinbrowser.doc.registryObjectHelp=
#omar.client.thinbrowser.doc.detailsHelp=
#omar.client.thinbrowser.doc.relationshipHelp=

#
# Identifiers of classification schemes to hide from view in the UI.
# The classification schemes which will not be available to users of the Java
# or Web UI for searching by classification, classifying created objects,
# etc.
#
# A '|'-separated list of identifiers.  Do not include spaces in this property
# value.  For example:
# jaxr-ebxml.registryBrowser.ConceptsTreeModel.hiddenSchemesList=urn:http:a|urn:http:b
#
#jaxr-ebxml.registryBrowser.ConceptsTreeModel.hiddenSchemesList=

noStateOrProvince=fr||es||de
