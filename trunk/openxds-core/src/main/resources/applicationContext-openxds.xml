<?xml version="1.0" encoding="UTF-8"?>
<!--
	 Copyright (c) 2009-2011 Misys Open Source Solutions (MOSS) and others

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
     implied. See the License for the specific language governing
     permissions and limitations under the License.

     Contributors:
       Misys Open Source Solutions - initial API and implementation
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop" 
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd       
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
	   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd"
	   default-lazy-init="true">

	<import resource="classpath*:/logsapplicationContext.xml"/>
	<!-- =================================================================== -->
    <!-- Property Configuration                                              -->
    <!-- =================================================================== -->   
    <!-- 
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
              <value>classpath*:/openxds.properties</value>
            </list>
        </property>
    </bean>
     -->
     
       <!-- =================================================================== -->
    <!-- Property Configuration                                              -->
    <!-- =================================================================== -->   
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
              <value>classpath:openxds.properties</value>
            </list>
        </property>
    </bean>

    <!-- =================================================================== -->
    <!-- XDS Registry Configuration                                          -->
    <!-- =================================================================== -->   
	<bean id="registryQueryService" class="org.openhealthtools.openxds.registry.adapter.omar31.XdsRegistryQueryServiceImpl"/>  

    <bean id="registryLifeCycleService" class="org.openhealthtools.openxds.registry.adapter.omar31.XdsRegistryLifeCycleServiceImpl">
    	<property name="mergePatientDao" ref="mergePatientDao" />
    </bean>

	<bean id="mergePatientDao" class="org.openhealthtools.openxds.registry.dao.MergePatientDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>	

    <bean id="registryPatientService" class="org.openhealthtools.openxds.registry.patient.XdsPatientRegistryOpenEmpiImpl">
    	<property name="patientRegistryBaseUri" value="http://localhost:8080/openempi-admin/openempi-ws-rest/"/>
    	<property name="logRequests" value="true"/>
    	<property name="username" value="admin"/>
    	<property name="password" value="admin"/>
    </bean>
<!--
    <bean id="registryPatientService" class="org.openhealthtools.openxds.registry.patient.XdsRegistryPatientServiceImpl">
         <property name="xdsRegistryPatientDao" ref="registryPatientDao" />
    </bean>
        
	<bean id="registryPatientDao" class="org.openhealthtools.openxds.dao.xdsRegistryPatientDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>	
-->
    <!-- bean id="registryPatientService" class="org.openhealthtools.openxds.registry.patient.MockupXdsRegistryPatientManager"/-->

       
    
    <!-- =================================================================== -->
    <!-- XDS Repository Configuration                                        -->
    <!-- =================================================================== -->   
    <bean id="repositoryService" class="org.openhealthtools.openxds.repository.relationaldb.RelationalDBRepositoryServiceImpl">
        <property name="repositoryUniqueId" value="${repository.uniqueId}"/>
        <property name="xdsRepositoryManagerDao" ref="repositoryManagerDao" />    
    </bean>

    <!--bean id="repositoryService" class="org.openhealthtools.openxds.repository.FileSystemRepositoryServiceImpl">
		<property name="repositoryUniqueId" value="${repository.uniqueId}"/>
		
		<repositoryRoot is required by FileSystemRepository>
   	    <property name="repositoryRoot" value="${file.system.repository.base.dir}" />
    </bean-->
  
    <bean id="repositoryManagerDao" class="org.openhealthtools.openxds.repository.dao.XdsRepositoryManagerDaoImpl">
 	    <property name="sessionFactory" ref="sessionFactory"/>
 	</bean>

    <bean id="repositoryItem" scope="prototype" class="org.openhealthtools.openxds.repository.XdsRepositoryItemImpl"/>
    
    <!-- =================================================================== -->
    <!-- DataSource and Transaction Configuration                            -->
    <!-- =================================================================== -->   
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${openxds.db.driver}"/>
		<property name="url" value="${openxds.db.url}"/>
		<property name="username" value="${openxds.db.username}"/>
		<property name="password" value="${openxds.db.password}"/>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    	<property name="sessionFactory" ref="sessionFactory" />
	</bean>       
    
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
  	    <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
    <!-- DataSource and Transaction configuration for logs -->
    
    <bean id="logsdataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${logs.db.driver}"/>
		<property name="url" value="${logs.db.url}"/>
		<property name="username" value="${logs.db.username}"/>
		<property name="password" value="${logs.db.password}"/>
	</bean>
	
	<bean id="logstransactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    	<property name="sessionFactory" ref="logssessionFactory" />
	</bean>       
    
    <bean id="logshibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
  	    <property name="sessionFactory" ref="logssessionFactory" />
    </bean>
  
    <!-- Enable @Transactional support -->
	<tx:annotation-driven/>
 
    <bean id="repositoryManagerTransaction" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
    	<property name="transactionManager" ref="transactionManager" />
        <property name="target" ref="repositoryService" />
        <property name="transactionAttributeSource">
        	<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />
        </property>
  	</bean>
  
	<bean id="registryManagerTransaction" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
		<property name="target" ref="registryLifeCycleService" />
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />
		</property>
	</bean>
 
   <bean id="registryPatientTransaction" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
		<property name="target" ref="registryPatientService"/>
		<property name="transactionAttributeSource">
			<bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />
		</property>
	</bean>
 
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
    	<property name="dataSource" ref="dataSource" />
        <property name="mappingResources">
        	<list>
           		<value>openxds.repository.hbm.xml</value>
                <value>externalidentifier.hbm.xml</value>
                <value>personidentifier.hbm.xml</value>
       		</list>
    	</property>
     	<property name="hibernateProperties">
        	<props>
            	<prop key="hibernate.dialect">${openxds.hibernate.dialect}</prop>
		    	<prop key="hibernate.show_sql">false</prop>
        	</props>
        </property>
	</bean>
	
	<bean id="logssessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    	<property name="dataSource" ref="logsdataSource" />
        <property name="annotatedClasses">
			<list>
				<value>
					org.openhealthtools.openexchange.syslog.Message
				</value>
				<value>
					org.openhealthtools.openexchange.syslog.CompanyDetails
				</value>
				<value>
					org.openhealthtools.openexchange.syslog.ErrorMessage
				</value>
				<value>
					org.openhealthtools.openexchange.syslog.HttpMessage
				</value>
				<value>
					org.openhealthtools.openexchange.syslog.OtherMessage
				</value>
				<value>
					org.openhealthtools.openexchange.syslog.SoapMessage
				</value>
			</list>
		</property>
     	<property name="hibernateProperties">
        	<props>
            	<prop key="hibernate.dialect">${logs.hibernate.dialect}</prop>
            	<prop key="hibernate.hbm2ddl.auto">update</prop>
		    	<prop key="hibernate.show_sql">false</prop>
        	</props>
        </property>
	</bean>  
	
	<bean id="logsService"
		class="org.openhealthtools.openexchange.syslog.LogImpl" lazy-init="true">
		<property name="sessionFactory">
			<ref local="logssessionFactory" />
		</property>
	</bean> 
</beans>    
